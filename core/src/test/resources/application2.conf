{
  "app": {
    "name": "SparkServiceTest"
  },
  "engines":{
    "spark": {
    spark.master: "spark://172.26.0.9:7077",
    fs.defaultFS: "hdfs://172.26.0.9:9000",
    spark.sql.warehouse.dir: "hdfs://172.26.0.9:9000/user/hive/warehouse",
    javax.jdo.option.ConnectionDriverName: "com.mysql.jdbc.Driver",
    hive.metastore.uris: "thrift://172.26.0.9:9083",
    javax.jdo.option.ConnectionURL: "jdbc:mysql://172.26.0.9/metastore"
  }
  },
  "ints": {
    "fortyTwo" : 42
  },
  "inputs": [
  {
    schema: "testdatabase",
    table: "Append",
    id: "HiveWithAppend",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "Append",
    fields: ["a","b","year","month","day"],
    filters: 12345678,
    extraFilters: "a=b",
    id: "HiveWithAppend2",
    type: "HIVE"
  },
  {
    schema: "testdatabase",
    table: "overridePartitions",
    id: "HiveWithOverridePartitions",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "overridePartitionsEmpty",
    id: "HiveWithoverridePartitionsEmpty",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "overridehdfspartitions",
    id: "HiveWithoverrideHdfsPartitions",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "overrideHdfsPartitionsDiferentPartition",
    id: "HiveWithoverrideHdfsPartitionsDiferentPartition",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "overrideHdfsPartitionsEmpty",
    id: "HiveWithoverrideHdfsPartitionsEmpty",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "Overwrite",
    id: "HiveWithOverwrite",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "Overwrite",
    fields: ["a","b","year","month","day"],
    filters: 12345678,
    extraFilters: "a=b",
    id: "HiveWithOverwrite2",
    type: "HIVE"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "text",
    id: "testDelete",
    type: "hdfs"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "text",
    id: "testFile",
    type: "hdfs"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "text",
    id: "testRow",
    type: "hdfs"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "text",
    id: "testRowAllConf",
    type: "hdfs"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "csv",
    schemaStr: "a String, b String, c String",
    optMap: {
      "delimiter": ";"
    }
    id: "testRowAllConfCsv",
    type: "hdfs"
  },
  {
    path: ["/tmp/hello.txt"],
    formatStr: "text",
    id: "testString",
    type: "hdfs"
  }
  ],
  "outputs":[

  // Test Hive solo Append
  {
    schema: "testdatabase",
    table: "Append",
    writeMode: "Append",
    overridePartitions: false,
    repartition: 2,
    overrideHdfsPartitions: None,
    appId: "",
    id: "HiveWithAppend",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "Append",
    id: "HiveWithAppend2",
    type: "Hive"
  },

  // Test Hive con Append y overridePartitions
  {
    schema: "testdatabase",
    table: "overridePartitions",
    writeMode: "Append",
    overridePartitions: true,
    appId: "33",
    id: "HiveWithOverridePartitions",
    type: "hive"
  },

  // Test Empty Hive con Append y overridePartitions
  {
    schema: "testdatabase",
    table: "overridePartitionsEmpty",
    writeMode: "Append",
    overridePartitions: true,
    repartition: 2,
    appId: "55",
    id: "HiveWithoverridePartitionsEmpty",
    type: "hive"
  },

  // Test Hive con Append y overrideHdfsPartitions
  {
    schema: "testdatabase",
    table: "overridehdfspartitions",
    writeMode: "Append",
    overridePartitions: false,
    repartition: 2,
    overrideHdfsPartitions: ["year", "month","day"],
    appId: "55",
    id: "HiveWithoverrideHdfsPartitions",
    type: "hive"
  }

  // Test Empty Hive con Append y overrideHdfsPartitions
  {
    schema: "testdatabase",
    table: "overrideHdfsPartitionsEmpty",
    writeMode: "Append",
    overridePartitions: false,
    repartition: 2,
    overrideHdfsPartitions: ["year", "month","day"],
    appId: "",
    id: "HiveWithoverrideHdfsPartitionsEmpty",
    type: "hive"
  }

  // Test Hive con Append, overrideHdfsPartitions y particiones fisicas y logicas diferentes
  {
    schema: "testdatabase",
    table: "overrideHdfsPartitionsDiferentPartition",
    writeMode: "Append",
    overridePartitions: false,
    repartition: 2,
    overrideHdfsPartitions: ["year", "month"],
    appId: "",
    id: "HiveWithoverrideHdfsPartitionsDiferentPartition",
    type: "hive"
  }

  // Test Hive solo Overwrite
  {
    schema: "testdatabase",
    table: "Overwrite",
    writeMode: "Overwrite",
    overridePartitions: false,
    repartition: 2,
    overrideHdfsPartitions: None,
    appId: "",
    id: "HiveWithOverwrite",
    type: "hive"
  },
  {
    schema: "testdatabase",
    table: "Overwrite",
    writeMode: "Overwrite",
    id: "HiveWithOverwrite2",
    type: "Hive"
  },

  // Empiezan test HDFS
  {
    path: "/tmp/",
    id: "testDelete",
    type: "hdfs",
    subtype: "delete"
  },
  {
    path: "/tmp/",
    id: "testFile",
    type: "hdfs",
    subtype: "file"
  },
  {
    path: "/tmp/testRow/",
    formatStr: "text",
    id: "testRow",
    type: "hdfs",
    subtype: "Row"
  },
  {
    path: "/tmp/testRowAllConf/",
    formatStr: "text",
    optMap: {
      "compression": "gzip"
    },
    partitionBy: "year",
    id: "testRowAllConf",
    type: "hdfs",
    subtype: "Row"
  },
  {
    path: "/tmp/testRowAllConfCsv/",
    formatStr: "csv",
    optMap: {
      "delimiter": "."
    }
    id: "testRowAllConfCsv",
    type: "hdfs",
    subtype: "Row"
  },
  {
    path: "/tmp/testString.txt",
    id: "testString",
    type: "hdfs",
    subtype: "string"
  }
  ]

  "BatchInputOutputTest": {
    //KO errors
    "missingIN": {
  },
    "emptyIN": {
    "inputs": []
  },
    "streamingnotIN": {
    "inputs": [
  {type: "streaming"}
    ]
  },
    "streamingnotINFormat": {
    "inputs": [
  {
    type: "streaming"
    id: "exist"
  }
    ]
  },
    "missingtypeIN": {
    "inputs": [
  {empty: "value"}
    ]
  },
    "weirdtypeIN": {
    "inputs": [
  {
    type: "papyrus",
    id: "1234"
  }
    ]
  },
    "missingIdINhive": {
    "inputs": [
  {type: "hive"}
    ]
  },
    "missingSchemaINhive": {
    "inputs": [
  {
    type: "hive",
    id: "1234"
  }
    ]
  },
    "missingTableINhive": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema"
  }
    ]
  },
    "missingIdINhdfs": {
    "inputs": [
  {type: "hdfs"}
    ]
  },
    "missingPathINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234"
  }
    ]
  },
    "emptyPathINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234",
    path: []
  }
    ]
  },
    "missingFormatStrINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234",
    path: ["as/asdfsf/asdf"]
  }
    ]
  },
    "invalidFormatStrINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234",
    path: ["as/asdfsf/asdf"],
    formatStr: "invalidStr"
  }
    ]
  },
    "invalidDateINhive2": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema",
    table: "table",
    YYYYMMDD: 20
  }
    ]
  },
    "invalidDateINhive3": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema",
    table: "table",
    YYYYMMDD: 123
  }
    ]
  },
    "invalidDateINhive5": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema",
    table: "table",
    YYYYMMDD: 12345
  }
    ]
  },
    "invalidDateINhive7": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema",
    table: "table",
    YYYYMMDD: 1234567
  }
    ]
  },
    "invalidDateINhive9": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema",
    table: "table",
    YYYYMMDD: 123456789
  }
    ]
  },
    "streamingIN": {
    "inputs": [
  {
    id: "streamingExample",
    type: "Streaming",
    formatStr: "text",
    optMap: {
    k1: "v1",
    k2: "v2"
  },
    schemaStr: "value STRING"
  }
    ]
  },
    "missingOUT": {
  },
    "emptyOUT": {
    "outputs": []
  },
    "missingtypeOUT": {
    "outputs": [
  {empty: "value"}
    ]
  },
    "streamingnotOUT": {
    "outputs": [
  {type: "streaming"}
    ]
  },
    "streamingnotOUTFormat": {
    "outputs": [
  {
    type: "streaming"
    id: "exist"
  }
    ]
  },
    "weirdtypeOUT": {
    "outputs": [
  {
    type: "papyrus",
    id: "1234"
  }
    ]
  },
    "missingIdOUThive": {
    "outputs": [
  {type: "hive"}
    ]
  },
    "missingSchemaOUThive": {
    "outputs": [
  {
    type: "hive",
    id: "1234"
  }
    ]
  },
    "missingTableOUThive": {
    "outputs": [
  {
    type: "hive",
    id: "1234",
    schema: "schema"
  }
    ]
  },
    "missingSubtypeOUThdfs": {
    "outputs": [
  {
    type: "hdfs",
    id: "1234",
    schema: "schema"
  }
    ]
  },
    "invalidSubtypeOUThdfs": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "smokeSignals",
    id: "1234",
    schema: "schema",
    path: "/tmp/"
  }
    ]
  },
    "missingIdOUThdfsDelete": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "delete"
  }
    ]
  },
    "missingPathOUThdfsDelete": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "delete",
    id: "1234"
  }
    ]
  },
    "missingIdOUThdfsFile": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "file"
  }
    ]
  },
    "missingPathOUThdfsFile": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "file",
    id: "1234"
  }
    ]
  },
    "missingIdOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row"
  }
    ]
  },
    "missingPathOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row",
    id: "1234"
  }
    ]
  },
    "missingFormatStrOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row",
    id: "1234",
    path: "/path/to/something/"
  }
    ]
  },
    "invalidFormatStrOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row",
    id: "1234",
    path: "/path/to/something/",
    formatStr: "invalidFormat"
  }
    ]
  },
    "missingIdOUThdfsString": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "string"
  }
    ]
  },
    "missingPathOUThdfsString": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "string",
    id: "1234"
  }
    ]
  },

    // OK
    "simpleINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234",
    path: ["as/asdfsf/asdf"],
    formatStr: "parquet"
  }
    ]
  },
    "completeINhdfs": {
    "inputs": [
  {
    type: "hdfs",
    id: "1234",
    path: ["as/asdfsf/asdf"],
    formatStr: "parquet",
    optMap: {
    "k1": "v1",
    "k2": "v2"
  },
    schemaStr: "value STRING"
  }
    ]
  },
    "simpleINhive": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable"
  }
    ]
  },
    "completeINhive": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable",
    fields: ["a", "b", "year", "month", "day"],
    YYYYMMDD: "2018",
    extraFilters: "a = b"
  }
    ]
  },
    "completeINhive2": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable",
    fields: ["a", "b", "year", "month", "day"],
    YYYYMMDD: "201810",
    extraFilters: "a = b"
  }
    ]
  },
    "completeINhive3": {
    "inputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable",
    fields: ["a", "b", "year", "month", "day"],
    YYYYMMDD: "20181006",
    extraFilters: "a = b"
  }
    ]
  },
    "simpleOUThive": {
    "outputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable"
  }
    ]
  },
    "completeOUThive": {
    "outputs": [
  {
    type: "hive",
    id: "1234",
    schema: "mySchema",
    table: "myTable",
    writeMode: "Overwrite",
    overridePartitions: false,
    repartition: 2,
    appId: "myAppId",
    overrideHdfsPartitions: ["year", "month"]
  }
    ]
  },
    "simpleOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row",
    id: "1234",
    path: "/some/path/",
    formatStr: "json"
  }
    ]
  },
    "completeOUThdfsRow": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "row",
    id: "1234",
    path: "/some/path/",
    formatStr: "json",
    optMap: {
    "k1": "v1",
    "k2": "v2"
  },
    bucketInt: 3,
    bucketSeq: ["a,b"],
    partitionBy: ["year", "month"]
  }
    ]
  },
    "OUThdfsString": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "string",
    id: "1234",
    path: "/some/path/"
  }
    ]
  },
    "OUThdfsFile": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "file",
    id: "1234",
    path: "/some/path/"
  }
    ]
  },
    "OUThdfsDelete": {
    "outputs": [
  {
    type: "hdfs",
    subtype: "delete",
    id: "1234",
    path: "/some/path/"
  }
    ]
  },
    "streamingOut": {
    "outputs": [
  {
    id: "streamingExample",
    type: "streaming",
    formatStr: "kafka",
    optMap: {
    "k1": "v1",
    "k2": "v2"
  },
    trigger: "20 seconds",
    outputModeStr: "parquet",
    partitionByStr: [year, day]
  }
    ]
  }
    "tryToDeleteNonExistingFile": {
    type: "hdfs",
    subtype: "delete",
    id: "1234",
    path: "/some/path/"
  }
  }
}