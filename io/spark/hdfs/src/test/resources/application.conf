{
  "app": {
    "name": "SparkServiceTest"
  },
  "engines": {
    "spark": {
      spark.master: "spark://172.26.0.9:7077",
      fs.defaultFS: "hdfs://172.26.0.9:9000",
      spark.sql.warehouse.dir: "hdfs://172.26.0.9:9000/user/hive/warehouse",
      javax.jdo.option.ConnectionDriverName: "com.mysql.jdbc.Driver",
      hive.metastore.uris: "thrift://172.26.0.9:9083",
      javax.jdo.option.ConnectionURL: "jdbc:mysql://172.26.0.9/metastore"
    }
  },

  "HdfsTest": {
    // OK
    // Inputs
    "validTextIN": {
      "inputs": [{
        type: "hdfs",
        id: "1234",
        path:["/tmp/hello.txt"],
        formatStr:"text",
        schemaStr:"value STRING"
      }],
      outputs:[{id:"fake", type:"hdfs", path:"fake", formatStr:"text",subtype:"string"}]},

    // Outputs
    "validDeleteOut": {
      "outputs": [{
        type: "hdfs",
        id: "1234",
        subtype:"delete",
        path:"/tmp/deleteThis.txt"
      }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "validFileOut": {
      "outputs": [{
        type: "hdfs",
        id: "1234",
        subtype:"file",
        path:"/tmp/file/"
      }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "validStringOut": {
      "outputs": [{
        type: "hdfs",
        id: "1234",
        subtype:"string",
        path:"/tmp/file/stringFile.txt"
      }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "validRowOut": {
      "outputs": [{
        type: "hdfs",
        id: "1234",
        subtype:"row",
        formatStr:"text",
        path:"/tmp/row/"
      }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},

    "validRowPartitionOut": {
      "outputs": [{
        type: "hdfs",
        id: "1234",
        subtype:"row",
        formatStr:"parquet",
        path:"/tmp/row2/",
        partitionBy:[year]
      }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},

    // ERRORS
    // Inputs
    "pathKeyMissingIN": {
      "inputs": [{
          type: "hdfs",
          id: "1234"
        }]},
    "pathValueEmptyIN": {
      "inputs": [{
          type: "hdfs",
          id: "1234",
          path:[]
        }]},
    "formatStrKeyMissingIN": {
      "inputs": [{
          type: "hdfs",
          id: "1234",
          path:["some/path"]
        }]},
    "formatStrValueInvalidIN": {
      "inputs": [{
          type: "hdfs",
          id: "1234",
          path:["some/path"],
          formatStr:"fakeFormat"
        }]},

    // Outputs
    "subtypeKeyMissingOUT": {
      "outputs": [{
          type: "hdfs",
          id: "1234"
        }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "pathKeyMissingOUT": {
      "outputs": [{
          type: "hdfs",
          id: "1234",
          subtype:"file"
        }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "subtypeKeyInvalidOUT": {
      "outputs": [{
          type: "hdfs",
          id: "1234",
          subtype:"fakeSubType"
        }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "formatStrKeyMissingOUT": {
      "outputs": [{
          type: "hdfs",
          id: "1234",
          subtype:"row",
          path:"some/path"
        }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
    "formatStrValueInvalidOUT": {
      "outputs": [{
          type: "hdfs",
          id: "1234",
          subtype:"row",
          path:"some/path",
          formatStr:"fakeFormat"
        }],
      inputs:[{id:"fake", type:"hdfs", path:["fake"], formatStr:"text"}]},
  }
}