{
  "app": {
    "name": "SparkServiceTest"
  },
  "engines":{
    "spark": {
      spark.master: "spark://172.26.0.9:7077",
      fs.defaultFS: "hdfs://172.26.0.9:9000",
      spark.sql.warehouse.dir: "hdfs://172.26.0.9:9000/user/hive/warehouse",
      javax.jdo.option.ConnectionDriverName: "com.mysql.jdbc.Driver",
      hive.metastore.uris: "thrift://172.26.0.9:9083",
      javax.jdo.option.ConnectionURL: "jdbc:mysql://172.26.0.9/metastore"
    }
  },

  "StreamingTest": {
    //KO errors
    "streamingnotINFormat": {
      "inputs": [
        {
          type: "streaming"
          id: "exist"
        }
      ],
      outputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingINSimple": {
      "inputs": [
        {
          id: "streamingExample",
          type: "Streaming",
          formatStr: "text"
        }
      ],
      outputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingIN": {
      "inputs": [
        {
          id: "streamingExample",
          type: "Streaming",
          formatStr: "text",
          optMap: {
            path: "/tmp/",
            k1: "v1",
            k2: "v2"
          },
          schemaStr: "value STRING"
        }
      ],
      outputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingnotOUTFormat": {
      "outputs": [
        {
          type: "streaming"
          id: "exist"
        }
      ],
      inputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingOutSimple": {
      "outputs": [
        {
          id: "streamingExample",
          type: "streaming",
          formatStr: "text"
        }
      ],
      inputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingOutSimpleTriggerOnce": {
      "outputs": [
        {
          id: "streamingExample",
          type: "streaming",
          formatStr: "text",
          trigger: "Once"
        }
      ],
      inputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingOut": {
      "outputs": [
        {
          id: "streamingExample",
          type: "streaming",
          formatStr: "text",
          optMap: {
            path: "/tmp/world/",
            checkpointLocation: "/tmp/"
          },
          trigger: "20 seconds",
          outputModeStr: "append"
        }
      ],
      inputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    },
    "streamingOutTriggerContinuous": {
      "outputs": [
        {
          id: "streamingExample",
          type: "streaming",
          formatStr: "text",
          trigger: "continuous20 seconds",
          outputModeStr: "append",
          partitionByStr: [value]
        }
      ],
      inputs:[{id:"fake", type:"streaming",formatStr:"text"}]
    }
  }
}
